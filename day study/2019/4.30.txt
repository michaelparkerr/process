9시~10시

책을 기준으로 문제가 나옴.

48p 
기밀성(권한없는 사용자에게 데이터 노출x) (암호화)
무결성(바뀌지 않는 것을 보장하는 것)(인가된 사용자가 정해진 규칙에 따라서만 바꿀 수 있게 하는 것)(해싱)
가용성(필요할 때 제공되는 것)(백업)

용어에 대한 의미를 다르게 해도 알아 들을 수 있어야함.

얘기하는 것 말고도 읽어보기

73p
책에는 안 나와있지만
윈도우즈에 관리자 그룹에 불필요한 계정이 들어가있으면 안된다 했음
net localgroups administrators로 확인
net localgroups administrators (계정명) /delete로 제거
net user (계정명) /delete

아래쪽 passwd,shadow파일 구조 알아두기

76p~78p
패스워드 관리 규칙을 알아야함.
1. 생성규칙
복잡도(구성하는 문자의 종류, 길이 조건)를 만족해야함.
알기 쉬운, 추측 가능한 패스워드를 쓰지 말아야함.(사전에 등록된 단어)(규칙이 있는 단어)(개인정보)
2. 관리규칙
패스워드 변경 주기를 지켜야함.(한가지를 오래 쓰면 안됨)
히스토리 관리해서 이전에 사용했던 3~4개의 패스워드 다시 사용 금지
[2가지를 만족하려면 최소 사용 기간을 정해야함]

인증정보가 노출되면 안된다.
1)세션을 제공해야한다.
2)노출되지 않도록 암호화해야한다.(https로 암호화 또는 data를 암호화)
3)안전한 인증을 제공하기 위해서 인증 시도 횟수 제한

c->s(id :admin pw :?)
pw를 알아내는 방법은 성공할 때까지 무작위 대입
이런 방식을 사용 못하도록 일정 횟수 시도하면 기다려야 재시도할 수 있도록함.(성공,실패 이외의 제3의 수단 추가)

하드코딩하면 안된다.

하드코딩 장점은 구현이 쉬워진다. 단점은 보안상 취약점이 생김. 정책이나 변경 사항을 일괄하여 적용하기 힘듬.
Connection conn = DriverManager.getConnection("jdbc:mysql://127.0.0.1:3306/openeg", "root", "apmsetup");
이런게 하드코딩.

88p
앞에 d가 붙어있으면 directory 없으면 (-) 파일
그다음 3개단위로 묶어서 권한
1번째 소유자 권한
2번째 그룹 권한
3번째 제3자 권한

SQL
종류 3가지
DDL
DML(개발자들은 이걸 많이씀)
DCL

134p
연결,연결해제

-----

10시~11시

145p
슬로HTTP헤더
슬로HTTPPOST공격(LUDY어택)

187p~193p
get,put,post,delete,options,head방식.

정적페이지=서버 개발자가 바꾸기 전까지 요청에 대한 똑같은 응답이 나옴.

정적페이지에 대한 동적인 요청을 해결하기 위해 동적 요청 처리가 등장.(동적 페이지)
처음에는 CGI같은 프로그램이 처리했지만, 효율적으로 처리하기 위해 SSS(Server Side Script)라고 한다.

Server는 파라미터가 들어가면 그 해당 값에 해당하는 것을 찾고 문서로 만들어서 Client에게 보내줌.(고전적 동적 페이지)

CSS(Client Side Script)(SSS의 반대 개념)
(다른 종류로 캐스캐이티드 스타일 시트도 있음)

서버는 데이터 처리만 하고 가공해서 보여주는것은 Client Side에서 한다.(요즘에는)

VV Script가 이전에는 쓰였지만, 요즘에 사장되어 Java Script만 쓰임.

이전 처리 형태
abc.jsp?param=value -> abc.jsp로 처리해서 -> HTML 문서 형태로 돌려줌.

ex) <table><tr><td>이름</td><td>홍길동</td></tr></table>

현재 처리 형태
abc.jsp?param=value -> 처리해서 -> 문서로 만드는 것이 아니라 XML, json 등으로 데이터를 담고 있는 문서를 돌려주기 시작함.

ex) {"student" : [{"name","홍길동"}]}

데이터를 이쁘게 보여줄 수 있는 CSS가 필요. DOM(Docoument Object Model)을 이용해서 만듬. 데이터 주고 받을 때는 AJAX(자바 스크립트 비동기 처리 방식) 디바이스가 다양해지고, 성능이 좋아져서 가능해짐. (Java Script)

동기식 처리 방식 
한개 처리하고 그 다음꺼 그 다음꺼 그 다음꺼 등등..(순차적으로 되니까 쉽지만, 시간이 많이 걸림)

비동기식 처리 방식
일시켜놓고 다른 것 하는 것. 일이 완료 되었는지는 메시지와 이벤트를 통해 알게 됨.(빠르다, 복잡하다.)

블록체인에서는 마이닝이 언제 완료될지 알 수 없기 때문에 비동기식 처리 방식으로 진행한다.
web3.js가 이더리움에서 인터페이스 역할을 해줌.(노드와 인터페이스를 연결해주는 역할)

비동기 처리에서 콜백, 프로미스가 있다.
web3 2.0에서는 전부 프로미스 구조로 바뀌었음.

390p

전자서명(보내는 사람의 개인 키로 암호화 하는 것.)
해당하는 데이터의 해쉬를 뽑고, 해쉬를 개인키로 암호화해서 두 개를 받는쪽의 공개키로 암호화 시켜서 보냄.
받아서 본인의 개인키로 복호화하고, 해쉬를 보낸 사람의 공개키로 복호화해서 해쉬를 검증해서 동일한지 확인한다.

인증과정을 정확히 이해하고 있어야함.

360p~366p

비대칭키 암호화방식, 해시(유일성)

해시는 단방향성이므로 인증정보 처리하는데 사용함.
순차적으로 저장되어있는 중요 데이터를 섞어야 할때 데이터의 키를 해시를 사용해서 값을 참조할 수 있도록 만든다.

SHA-1계열은 쓰면 안된다.
SHA-2(SHA-256,SHA-384,SHA-512)
SHA-3가 현재 이더리움에서 사용 중.

Rijndael(레인달) -> 대칭키 알고리즘

헥사인코딩 방법 알아두기
66글자->56 *4 bit =224bit
(SHA-224 검증)

406p~413p
블록체인

431p
인증

436p
SSO(Single Sign On)
SSO는 물리적 서버일 수도, 프로그램일 수도 있다.
SNS 로그인을 이용하여 로그인하는 소셜 로그인이 비슷함.
소셜 로그인 솔루션으로 oauth를 사용함.(구글 API를 이용한 로그인)

438p
방화벽(불 번지는 것을 막기 위한 벽)
포트를 기반으로 막는 것, IP 주소 기반으로 막는 것.
신뢰하지 않는 외부 네트워크와 신뢰하는 내부 네트워크 사이를 지나는 패킷을 미리 정한 규칙에 따라 차단하거나 보내주는 기능을 하는 하드웨어나 소프트웨어를 말한다.

접근제어
로깅과 감사 추적
인증
데이터 암호화(VPN)

441p
침입 탐지 시스템(IDS)
악성행위 하는 서버 IP를 막는 것.
우리가 서비스하는게 웹 서비스면 80이외에 다른 포트를 막아버림.
80으로 요청이 들어온 데이터를 확인.

데이터 수집, 데이터 필터링과 축약,침입 탐지, 책임 추적 및 대응, 설치 위치

446p
침입 방지 시스템(IPS)

WAF(웹 방화벽)

451p
VPN(인터넷 망을 내부 망처럼 쓸 수 있게 해주는 솔루션)
보안이 잘되있을 때는 외부에서 내부로 붙을 때 VPN을 사용함.
중간정도가 Team Viewer
하급이 직접 연결.

464p
DRM(Digital Right Management)(외부에서 못보게, 복사를 못하게, 출력을 못하게, 캡처 못하게)
DLP(Data Leak Prevention)
매체 제어,통신 인터페이스 제어, 인터넷 통신 제어

468p
보안 솔루션

포스코 건설 쪽에서 usb를 이동형 디스크, 즉 하드디스크처럼
가상디스크를 만들어서 그걸 usb로 만들어서 우회함.

517p
피싱,파밍,스미싱

grep -E "psc|root" /etc/passwd
grep -E "psc|root" /etc/shadow
pwunconv //패스워드 언컨버트
grep -E "psc|root" /etc/passwd
pwconv
grep -E "psc|root" /etc/passwd
exit // root 세션 종료 
grep -E "psc|root" /etc/passwd
grep -E "psc|root" /etc/shadow //허가 거부가 뜸.

관리자 계정인지 아는 방법은 UID와 GID를 보고 알 수 있다.(0이면 됨.)
grep -E ":0:" /etc/passwd // 이걸로 관리자 계정이 뭔지 알 수 있다.
grep ":0:" /etc/passwd // -E빼도 됨.

쉘 : 시스템과 사용자가 interaction하는 것. (서비스를 구동하는 계정들은 interaction할 필요가 없음)

adduser tester // 루트만이 사용자나 그룹을 시스템에 추가할 수 있습니다.
sudo adduser tester // 이름,비밀번호 등등 설정
grep tester /etc/passwd
su tester // tester로 세션 변경
exit
gedit /etc/passwd //파일은 열리지만 읽기전용.
sudo gedit /etc/passwd // 파일을 연뒤 tester 뒤의 bash를 none로 변경
grep tester /etc/passwd // 끝이 none으로 바뀜
su tester //비밀번호 입력해야되는데 none이라는 쉘이 존재하지 않으므로 비밀번호 입력에서 빠져나와버림.
cat etc/passwd //끝이 bash가 아닌 것들이 위와 마찬가지인 것들

tistory 계정관리에 실습 예제들을 올려놨으니 해보기.

FDS(Fraud Detection System)(원래쓰던거랑 다른게 나타났을 때 찾아냄)


패스워드 관리 tistory 읽어보기

최초 로그인 모드
메일 시스템이 바뀌면 데이터 마이그래이션을 해야함. 메일 ID가 바뀌면 안됨.password는 그대로 마이그레이션 할 수 없음.
만약 그대로 마이그레이션되었다면 제3자가 내 계정을 아는 것을 의심해봐야함.
마이그레이션 할때 ~월 ~일부로 (계정명)/계정명(특수 번호)로 바뀝니다.를 공지. 이것을 최초 로그인 모드라고 함.


인증시도 횟수 제한을 안하면 burp suite 심플리스트 공격에 당할 수 있음.

인증시도 횟수 제한
1) 제한 횟수 설정
2) 초과했을 때 적용할 규칙
3) 해제 방법 
-자동 
-추가인증
캡챠